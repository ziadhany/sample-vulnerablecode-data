vulnerability_id: VCID-tarv-fm24-aaaj
aliases:
  - CVE-2021-39218
  - GHSA-4873-36h9-wv49
  - PYSEC-2021-321
summary: Wasmtime is an open source runtime for WebAssembly & WASI. In Wasmtime from version
  0.26.0 and before version 0.30.0 is affected by a memory unsoundness vulnerability. There
  was an invalid free and out-of-bounds read and write bug when running Wasm that uses `externref`s
  in Wasmtime. To trigger this bug, Wasmtime needs to be running Wasm that uses `externref`s,
  the host creates non-null `externrefs`, Wasmtime performs a garbage collection (GC), and there
  has to be a Wasm frame on the stack that is at a GC safepoint where there are no live references
  at this safepoint, and there is a safepoint with live references earlier in this frame's function.
  Under this scenario, Wasmtime would incorrectly use the GC stack map for the safepoint from
  earlier in the function instead of the empty safepoint. This would result in Wasmtime treating
  arbitrary stack slots as `externref`s that needed to be rooted for GC. At the *next* GC, it
  would be determined that nothing was referencing these bogus `externref`s (because nothing
  could ever reference them, because they are not really `externref`s) and then Wasmtime would
  deallocate them and run `<ExternRef as Drop>::drop` on them. This results in a free of memory
  that is not necessarily on the heap (and shouldn't be freed at this moment even if it was),
  as well as potential out-of-bounds reads and writes. Even though support for `externref`s
  (via the reference types proposal) is enabled by default, unless you are creating non-null
  `externref`s in your host code or explicitly triggering GCs, you cannot be affected by this
  bug. We have reason to believe that the effective impact of this bug is relatively small because
  usage of `externref` is currently quite rare. This bug has been patched and users should upgrade
  to Wasmtime version 0.30.0. If you cannot upgrade Wasmtime at this time, you can avoid this
  bug by disabling the reference types proposal by passing `false` to `wasmtime::Config::wasm_reference_types`.
severities:
  - id: 556472
    reference_id: 23710
    scoring_system: cvssv2
    value: '3.3'
    scoring_elements: AV:L/AC:M/Au:N/C:N/I:P/A:P
  - id: 556470
    reference_id: 23710
    scoring_system: cvssv3
    value: '6.3'
    scoring_elements: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H
references:
  - id: 7997
    url: https://crates.io/crates/wasmtime
    reference_id:
  - id: 8001
    url: https://github.com/bytecodealliance/wasmtime/commit/398a73f0dd862dbe703212ebae8e34036a18c11c
    reference_id:
  - id: 37647
    url: https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WAVBRYDDUIY2ZR3K3FO4BVYJKIMJ5TP7/
    reference_id:
  - id: 37646
    url: https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Z2Z33FTXFQ6EOINVEQIP4DFBG53G5XIY/
    reference_id:
  - id: 895328
    url: https://nvd.nist.gov/vuln/search/results?adv_search=true&isCpeNameSearch=true&query=cpe:2.3:a:bytecodealliance:wasmtime:*:*:*:*:*:rust:*:*
    reference_id: cpe:2.3:a:bytecodealliance:wasmtime:*:*:*:*:*:rust:*:*
  - id: 169238
    url: https://nvd.nist.gov/vuln/search/results?adv_search=true&isCpeNameSearch=true&query=cpe:2.3:o:fedoraproject:fedora:34:*:*:*:*:*:*:*
    reference_id: cpe:2.3:o:fedoraproject:fedora:34:*:*:*:*:*:*:*
  - id: 169239
    url: https://nvd.nist.gov/vuln/search/results?adv_search=true&isCpeNameSearch=true&query=cpe:2.3:o:fedoraproject:fedora:35:*:*:*:*:*:*:*
    reference_id: cpe:2.3:o:fedoraproject:fedora:35:*:*:*:*:*:*:*
  - id: 23710
    url: https://nvd.nist.gov/vuln/detail/CVE-2021-39218
    reference_id: CVE-2021-39218
  - id: 37649
    url: https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49
    reference_id: GHSA-4873-36h9-wv49
weaknesses: []
