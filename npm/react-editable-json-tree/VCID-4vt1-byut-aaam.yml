vulnerability_id: VCID-4vt1-byut-aaam
aliases:
  - CVE-2022-36010
  - GHSA-j3rv-w43q-f9x2
summary: 'This library allows strings to be parsed as functions and stored as a specialized
  component, [`JsonFunctionValue`](https://github.com/oxyno-zeta/react-editable-json-tree/blob/09a0ca97835b0834ad054563e2fddc6f22bc5d8c/src/components/JsonFunctionValue.js).
  To do this, Javascript''s [`eval`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval)
  function is used to execute strings that begin with "function" as Javascript. This unfortunately
  could allow arbitrary code to be executed if it exists as a value within the JSON structure
  being displayed. Given that this component may often be used to display data from arbitrary,
  untrusted sources, this is extremely dangerous. One important note is that users who have
  defined a custom [`onSubmitValueParser`](https://github.com/oxyno-zeta/react-editable-json-tree/tree/09a0ca97835b0834ad054563e2fddc6f22bc5d8c#onsubmitvalueparser)
  callback prop on the [`JsonTree`](https://github.com/oxyno-zeta/react-editable-json-tree/blob/09a0ca97835b0834ad054563e2fddc6f22bc5d8c/src/JsonTree.js)
  component should be ***unaffected***. This vulnerability exists in the default `onSubmitValueParser`
  prop which calls [`parse`](https://github.com/oxyno-zeta/react-editable-json-tree/blob/master/src/utils/parse.js#L30).
  Prop is added to `JsonTree` called `allowFunctionEvaluation`. This prop will be set to `true`
  in v2.2.2, which allows upgrade without losing backwards-compatibility. In v2.2.2, we switched
  from using `eval` to using [`Function`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function)
  to construct anonymous functions. This is better than `eval` for the following reasons: -
  Arbitrary code should not be able to execute immediately, since the `Function` constructor
  explicitly *only creates* anonymous functions - Functions are created without local closures,
  so they only have access to the global scope If you use: - **Version `<2.2.2`**, you must
  upgrade as soon as possible. - **Version `^2.2.2`**, you must explicitly set `JsonTree`''s
  `allowFunctionEvaluation` prop to `false` to fully mitigate this vulnerability. - **Version
  `>=3.0.0`**, `allowFunctionEvaluation` is already set to `false` by default, so no further
  steps are necessary.'
severities:
  - id: 644608
    reference_id: 1344180
    scoring_system: cvssv3
    value: '9.8'
    scoring_elements: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
  - id: 707180
    reference_id: 1468772
    scoring_system: cvssv3.1_qr
    value: CRITICAL
    scoring_elements:
references:
  - id: 1344178
    url: https://github.com/oxyno-zeta/react-editable-json-tree/releases/tag/2.2.2
    reference_id:
  - id: 1344179
    url: https://github.com/oxyno-zeta/react-editable-json-tree/security/advisories/GHSA-j3rv-w43q-f9x2
    reference_id:
  - id: 1344181
    url: https://nvd.nist.gov/vuln/search/results?adv_search=true&isCpeNameSearch=true&query=cpe:2.3:a:react_editable_json_tree_project:react_editable_json_tree:*:*:*:*:*:node.js:*:*
    reference_id: cpe:2.3:a:react_editable_json_tree_project:react_editable_json_tree:*:*:*:*:*:node.js:*:*
  - id: 1344180
    url: https://nvd.nist.gov/vuln/detail/CVE-2022-36010
    reference_id: CVE-2022-36010
  - id: 1468772
    url: https://github.com/advisories/GHSA-j3rv-w43q-f9x2
    reference_id: GHSA-j3rv-w43q-f9x2
weaknesses: []
