vulnerability_id: VCID-a3hu-9cm8-aaag
aliases:
  - CVE-2020-11105
summary: An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr
  values, using the raw pointer address as a unique identifier. This becomes problematic if
  an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated
  at the same address. Serialization fidelity thereby becomes dependent upon memory layout.
  In short, serialized std::shared_ptr variables cannot always be expected to serialize back
  into their original values. This can have any number of consequences, depending on the context
  within which this manifests.
severities:
  - id: 432043
    reference_id: 813347
    scoring_system: cvssv2
    value: '7.5'
    scoring_elements: AV:N/AC:L/Au:N/C:P/I:P/A:P
  - id: 432041
    reference_id: 813347
    scoring_system: cvssv3
    value: '9.8'
    scoring_elements: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
references:
  - id: 813346
    url: https://github.com/USCiLab/cereal/issues/636
    reference_id:
  - id: 813345
    url: https://nvd.nist.gov/vuln/search/results?adv_search=true&isCpeNameSearch=true&query=cpe:2.3:a:usc:cereal:*:*:*:*:*:*:*:*
    reference_id: cpe:2.3:a:usc:cereal:*:*:*:*:*:*:*:*
  - id: 813347
    url: https://nvd.nist.gov/vuln/detail/CVE-2020-11105
    reference_id: CVE-2020-11105
weaknesses: []
